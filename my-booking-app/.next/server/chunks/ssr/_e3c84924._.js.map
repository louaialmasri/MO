{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/components/AdminBreadcrumbs.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Breadcrumbs, Link as MUILink, Typography } from '@mui/material'\r\nimport Link from 'next/link'\r\n\r\ntype Crumb = { label: string; href?: string }\r\n\r\nexport default function AdminBreadcrumbs({ items }: { items: Crumb[] }) {\r\n  const last = items[items.length - 1]\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" sx={{ mb: 2 }}>\r\n      {items.slice(0, -1).map((c) =>\r\n        c.href ? (\r\n          <MUILink key={c.label} component={Link} href={c.href} underline=\"hover\" color=\"inherit\">\r\n            {c.label}\r\n          </MUILink>\r\n        ) : (\r\n          <Typography key={c.label} color=\"text.secondary\">{c.label}</Typography>\r\n        )\r\n      )}\r\n      <Typography color=\"text.primary\" fontWeight={600}>{last.label}</Typography>\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AAHA;;;;AAOe,SAAS,iBAAiB,EAAE,KAAK,EAAsB;IACpE,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE;IACpC,qBACE,8OAAC,gNAAA,CAAA,cAAW;QAAC,cAAW;QAAa,IAAI;YAAE,IAAI;QAAE;;YAC9C,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IACvB,EAAE,IAAI,iBACJ,8OAAC,2LAAA,CAAA,OAAO;oBAAe,WAAW,4JAAA,CAAA,UAAI;oBAAE,MAAM,EAAE,IAAI;oBAAE,WAAU;oBAAQ,OAAM;8BAC3E,EAAE,KAAK;mBADI,EAAE,KAAK;;;;yCAIrB,8OAAC,6MAAA,CAAA,aAAU;oBAAe,OAAM;8BAAkB,EAAE,KAAK;mBAAxC,EAAE,KAAK;;;;;0BAG5B,8OAAC,6MAAA,CAAA,aAAU;gBAAC,OAAM;gBAAe,YAAY;0BAAM,KAAK,KAAK;;;;;;;;;;;;AAGnE","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/app/admin/availability/templates/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useAuth } from '@/context/AuthContext'\r\nimport {\r\n  fetchSalons, listStaffAssignmentsForSalon,\r\n  fetchTemplates, createTemplateApi, updateTemplateApi, deleteTemplateApi, applyTemplateApi,\r\n  type AvailabilityTemplate, type TemplateDay, type TemplateSegment\r\n} from '@/services/api'\r\nimport {\r\n  Container, Stack, Typography, Paper, Divider, TextField, MenuItem, Button, IconButton,\r\n  List, ListItem, ListItemText, Tooltip, Snackbar, Alert, Chip, Box,\r\n  ListItemButton\r\n} from '@mui/material'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport SaveIcon from '@mui/icons-material/Save'\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\r\nimport AdminBreadcrumbs from '@/components/AdminBreadcrumbs'\r\n\r\nconst WEEKDAYS = ['So','Mo','Di','Mi','Do','Fr','Sa']\r\n\r\nfunction emptyWeek(): TemplateDay[] {\r\n  return Array.from({ length: 7 }, (_, i) => ({ weekday: i, segments: [] }))\r\n}\r\n\r\nexport default function TemplatesPage() {\r\n  const { user, loading } = useAuth()\r\n  const router = useRouter()\r\n\r\n  const [salons, setSalons] = useState<{_id:string; name:string}[]>([])\r\n  const [salonId, setSalonId] = useState<string>('')\r\n\r\n  const [staff, setStaff] = useState<{_id:string; name?:string; email:string}[]>([])\r\n  const [staffId, setStaffId] = useState<string>('')\r\n\r\n  const [templates, setTemplates] = useState<AvailabilityTemplate[]>([])\r\n  const [selectedId, setSelectedId] = useState<string>('')\r\n\r\n  const selected = useMemo(() => templates.find(t => t._id === selectedId) || null, [templates, selectedId])\r\n\r\n  const [days, setDays] = useState<TemplateDay[]>(emptyWeek())\r\n  const [tplName, setTplName] = useState('')\r\n\r\n  // apply\r\n  const [weekStart, setWeekStart] = useState<string>('') // yyyy-mm-dd (Montag)\r\n  const [weeks, setWeeks] = useState<number>(1)\r\n  const [replace, setReplace] = useState<boolean>(true)\r\n\r\n  const [toast, setToast] = useState<{open:boolean; msg:string; sev:'success'|'error'}>({open:false,msg:'',sev:'success'})\r\n\r\n  useEffect(() => {\r\n      if (loading) return\r\n      if (!user) return router.replace('/login')\r\n      if (user.role !== 'admin') return router.replace('/')\r\n    }, [user, loading])\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const s = await fetchSalons()\r\n      setSalons(s)\r\n      if (s[0]?._id) setSalonId(s[0]._id)\r\n    })()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!salonId) return\r\n      const st = await listStaffAssignmentsForSalon(salonId)\r\n      setStaff(st.map(u => ({ _id: u._id, name: (u as any).name, email: u.email })))\r\n      if (st[0]?._id) setStaffId(st[0]._id)\r\n    })()\r\n  }, [salonId])\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!staffId) { setTemplates([]); setSelectedId(''); setDays(emptyWeek()); setTplName(''); return }\r\n      const list = await fetchTemplates(staffId)\r\n      setTemplates(list)\r\n      if (list[0]?._id) {\r\n        setSelectedId(list[0]._id)\r\n        setDays(list[0].days?.length ? list[0].days : emptyWeek())\r\n        setTplName(list[0].name)\r\n      } else {\r\n        setSelectedId('')\r\n        setDays(emptyWeek())\r\n        setTplName('')\r\n      }\r\n    })()\r\n  }, [staffId])\r\n\r\n  const addSeg = (wd: number, type: 'work'|'break') => {\r\n    setDays(prev => prev.map(d => d.weekday === wd\r\n      ? { ...d, segments: [...d.segments, { start:'09:00', end:'17:00', type } as TemplateSegment] }\r\n      : d\r\n    ))\r\n  }\r\n\r\n  const setSeg = (wd: number, idx: number, patch: Partial<TemplateSegment>) => {\r\n    setDays(prev => prev.map(d => {\r\n      if (d.weekday !== wd) return d\r\n      const segs = d.segments.slice()\r\n      segs[idx] = { ...segs[idx], ...patch }\r\n      return { ...d, segments: segs }\r\n    }))\r\n  }\r\n\r\n  const delSeg = (wd: number, idx: number) => {\r\n    setDays(prev => prev.map(d => {\r\n      if (d.weekday !== wd) return d\r\n      const segs = d.segments.slice()\r\n      segs.splice(idx, 1)\r\n      return { ...d, segments: segs }\r\n    }))\r\n  }\r\n\r\n  const copyDayToAll = (src: number) => {\r\n    const srcSegs = days.find(d => d.weekday === src)?.segments || []\r\n    setDays(prev => prev.map(d => d.weekday === src ? d : { ...d, segments: srcSegs }))\r\n    setToast({open:true,msg:`${WEEKDAYS[src]} auf alle Tage kopiert`,sev:'success'})\r\n  }\r\n\r\n  const saveTemplate = async () => {\r\n    try {\r\n      if (!staffId) { setToast({open:true,msg:'Bitte Mitarbeiter wählen',sev:'error'}); return }\r\n      if (!tplName.trim()) { setToast({open:true,msg:'Name erforderlich',sev:'error'}); return }\r\n\r\n      if (selected) {\r\n        const upd = await updateTemplateApi(selected._id, { name: tplName.trim(), days })\r\n        setTemplates(prev => prev.map(t => t._id === upd._id ? upd : t))\r\n        setToast({open:true,msg:'Template gespeichert',sev:'success'})\r\n      } else {\r\n        const created = await createTemplateApi({ name: tplName.trim(), staff: staffId, days })\r\n        setTemplates(prev => [created, ...prev])\r\n        setSelectedId(created._id)\r\n        setToast({open:true,msg:'Template erstellt',sev:'success'})\r\n      }\r\n    } catch {\r\n      setToast({open:true,msg:'Speichern fehlgeschlagen',sev:'error'})\r\n    }\r\n  }\r\n\r\n  const newTemplate = () => {\r\n    setSelectedId('')\r\n    setTplName('Neues Template')\r\n    setDays(emptyWeek())\r\n  }\r\n\r\n  const removeTemplate = async (id: string) => {\r\n    try {\r\n      await deleteTemplateApi(id)\r\n      const rest = templates.filter(t => t._id !== id)\r\n      setTemplates(rest)\r\n      if (selectedId === id) {\r\n        if (rest[0]) {\r\n          setSelectedId(rest[0]._id)\r\n          setTplName(rest[0].name)\r\n          setDays(rest[0].days)\r\n        } else {\r\n          setSelectedId(''); setTplName(''); setDays(emptyWeek())\r\n        }\r\n      }\r\n      setToast({open:true,msg:'Template gelöscht',sev:'success'})\r\n    } catch {\r\n      setToast({open:true,msg:'Löschen fehlgeschlagen',sev:'error'})\r\n    }\r\n  }\r\n\r\n  const applyNow = async () => {\r\n    try {\r\n      if (!selectedId) { setToast({open:true,msg:'Template wählen',sev:'error'}); return }\r\n      if (!weekStart) { setToast({open:true,msg:'Start der Woche wählen',sev:'error'}); return }\r\n      const res = await applyTemplateApi({ templateId: selectedId, weekStart, weeks, replace })\r\n      setToast({open:true,msg:`Generiert: ${res.created} • Ersetzt: ${res.replaced}`,sev:'success'})\r\n    } catch {\r\n      setToast({open:true,msg:'Anwenden fehlgeschlagen',sev:'error'})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <AdminBreadcrumbs items={[{label:'Mein Salon', href:'/admin'}, {label:'Arbeitszeiten-Templates'}]} />\r\n      <Typography variant=\"h4\" fontWeight={800} gutterBottom>Arbeitszeiten-Templates</Typography>\r\n\r\n      <Stack direction={{ xs:'column', md:'row' }} spacing={2} sx={{ mb: 2 }}>\r\n        <TextField select label=\"Salon\" value={salonId} onChange={e=>setSalonId(e.target.value)} sx={{ minWidth: 240 }}>\r\n          {salons.map(s => <MenuItem key={s._id} value={s._id}>{s.name}</MenuItem>)}\r\n        </TextField>\r\n        <TextField select label=\"Mitarbeiter\" value={staffId} onChange={e=>setStaffId(e.target.value)} sx={{ minWidth: 280 }}>\r\n          {staff.map(s => <MenuItem key={s._id} value={s._id}>{s.name || s.email}</MenuItem>)}\r\n        </TextField>\r\n        <Box flex={1} />\r\n        <Button variant=\"outlined\" startIcon={<AddIcon />} onClick={newTemplate}>Neu</Button>\r\n        <Button variant=\"contained\" startIcon={<SaveIcon />} onClick={saveTemplate}>Speichern</Button>\r\n      </Stack>\r\n\r\n      <Stack direction={{ xs:'column', md:'row' }} spacing={2}>\r\n        {/* Templates-Liste */}\r\n        <Paper variant=\"outlined\" sx={{ p: 2, borderRadius: 2, minWidth: 280 }}>\r\n          <Typography variant=\"h6\" fontWeight={700}>Templates</Typography>\r\n          <Divider sx={{ my: 1 }} />\r\n          <List dense>\r\n            {templates.map(t => (\r\n                <ListItem\r\n                key={t._id}\r\n                secondaryAction={\r\n                    <Tooltip title=\"Löschen\">\r\n                    <IconButton color=\"error\" onClick={() => removeTemplate(t._id)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                }\r\n                disablePadding\r\n                >\r\n                <ListItemButton\r\n                    selected={t._id === selectedId}\r\n                    onClick={() => {\r\n                    setSelectedId(t._id);\r\n                    setTplName(t.name);\r\n                    setDays(t.days);\r\n                    }}\r\n                >\r\n                    <ListItemText primary={t.name} />\r\n                </ListItemButton>\r\n                </ListItem>\r\n            ))}\r\n            </List>\r\n          <Divider sx={{ my: 1 }} />\r\n          <TextField label=\"Template-Name\" fullWidth value={tplName} onChange={e=>setTplName(e.target.value)} />\r\n        </Paper>\r\n\r\n        {/* Wochen-Editor */}\r\n        <Paper variant=\"outlined\" sx={{ p: 2, borderRadius: 2, flex: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"h6\" fontWeight={700} sx={{ flex: 1 }}>Woche bearbeiten</Typography>\r\n            <Tooltip title=\"Mo → alle kopieren\">\r\n              <IconButton onClick={()=>copyDayToAll(1)}><ContentCopyIcon /></IconButton>\r\n            </Tooltip>\r\n          </Stack>\r\n          <Divider sx={{ my: 1 }} />\r\n          <Stack spacing={1}>\r\n            {days.map(d => (\r\n              <Paper key={d.weekday} variant=\"outlined\" sx={{ p: 1.5, borderRadius: 2 }}>\r\n                <Stack direction={{ xs:'column', sm:'row' }} spacing={1} alignItems=\"center\">\r\n                  <Typography sx={{ minWidth: 48, fontWeight: 700 }}>{WEEKDAYS[d.weekday]}</Typography>\r\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\" flexWrap=\"wrap\">\r\n                    {d.segments.map((seg, idx) => (\r\n                      <Stack key={idx} direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: .5 }}>\r\n                        <Chip size=\"small\" label={seg.type === 'work' ? 'Work' : 'Pause'} />\r\n                        <TextField type=\"time\" size=\"small\" value={seg.start} onChange={e=>setSeg(d.weekday, idx, { start: e.target.value })} />\r\n                        <TextField type=\"time\" size=\"small\" value={seg.end}   onChange={e=>setSeg(d.weekday, idx, { end: e.target.value })} />\r\n                        <IconButton size=\"small\" color=\"error\" onClick={()=>delSeg(d.weekday, idx)}><DeleteIcon fontSize=\"small\" /></IconButton>\r\n                      </Stack>\r\n                    ))}\r\n                  </Stack>\r\n                  <Box flex={1} />\r\n                  <Stack direction=\"row\" spacing={1}>\r\n                    <Button size=\"small\" variant=\"outlined\" onClick={()=>addSeg(d.weekday,'work')}>+ Work</Button>\r\n                    <Button size=\"small\" variant=\"text\" onClick={()=>addSeg(d.weekday,'break')}>+ Pause</Button>\r\n                  </Stack>\r\n                </Stack>\r\n              </Paper>\r\n            ))}\r\n          </Stack>\r\n        </Paper>\r\n\r\n        {/* Anwenden */}\r\n        <Paper variant=\"outlined\" sx={{ p: 2, borderRadius: 2, minWidth: 320 }}>\r\n          <Typography variant=\"h6\" fontWeight={700}>Woche generieren</Typography>\r\n          <Divider sx={{ my: 1 }} />\r\n          <Stack spacing={2}>\r\n            <TextField label=\"Start (Montag)\" type=\"date\" value={weekStart} onChange={e=>setWeekStart(e.target.value)} InputLabelProps={{ shrink: true }} />\r\n            <TextField label=\"Anzahl Wochen\" type=\"number\" value={weeks} onChange={e=>setWeeks(Number(e.target.value)||1)} inputProps={{ min:1, max:12 }} />\r\n            <TextField select label=\"Ersetzen\" value={replace ? 'yes' : 'no'} onChange={e=>setReplace(e.target.value==='yes')}>\r\n              <MenuItem value=\"yes\">Bestehende Work/Pause dieser Tage ersetzen</MenuItem>\r\n              <MenuItem value=\"no\">Nur hinzufügen (Konflikte werden übersprungen)</MenuItem>\r\n            </TextField>\r\n            <Button variant=\"contained\" onClick={applyNow}>Jetzt anwenden</Button>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Abwesenheiten (Urlaub/Krank/Frei) bleiben bestehen und blocken bei Bedarf die Slots.\r\n            </Typography>\r\n          </Stack>\r\n        </Paper>\r\n      </Stack>\r\n\r\n      <Snackbar open={toast.open} autoHideDuration={2200} onClose={()=>setToast(p=>({...p, open:false}))}>\r\n        <Alert severity={toast.sev} variant=\"filled\">{toast.msg}</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAnBA;;;;;;;;;;;;AAqBA,MAAM,WAAW;IAAC;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;CAAK;AAErD,SAAS;IACP,OAAO,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,CAAC,GAAG,IAAM,CAAC;YAAE,SAAS;YAAG,UAAU,EAAE;QAAC,CAAC;AAC1E;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAChC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA+B,EAAE;IACpE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA8C,EAAE;IACjF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,EAAE;IACrE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAErD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,eAAe,MAAM;QAAC;QAAW;KAAW;IAEzG,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,QAAQ;IACR,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,IAAI,sBAAsB;;IAC7E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEhD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD;QAAC,MAAK;QAAM,KAAI;QAAG,KAAI;IAAS;IAEtH,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,SAAS;QACb,IAAI,CAAC,MAAM,OAAO,OAAO,OAAO,CAAC;QACjC,IAAI,KAAK,IAAI,KAAK,SAAS,OAAO,OAAO,OAAO,CAAC;IACnD,GAAG;QAAC;QAAM;KAAQ;IAEpB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAC;YACC,MAAM,IAAI,MAAM,CAAA,GAAA,+GAAA,CAAA,cAAW,AAAD;YAC1B,UAAU;YACV,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC,GAAG;QACpC,CAAC;IACH,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAC;YACC,IAAI,CAAC,SAAS;YACd,MAAM,KAAK,MAAM,CAAA,GAAA,+GAAA,CAAA,+BAA4B,AAAD,EAAE;YAC9C,SAAS,GAAG,GAAG,CAAC,CAAA,IAAK,CAAC;oBAAE,KAAK,EAAE,GAAG;oBAAE,MAAM,AAAC,EAAU,IAAI;oBAAE,OAAO,EAAE,KAAK;gBAAC,CAAC;YAC3E,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,WAAW,EAAE,CAAC,EAAE,CAAC,GAAG;QACtC,CAAC;IACH,GAAG;QAAC;KAAQ;IAEZ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAC;YACC,IAAI,CAAC,SAAS;gBAAE,aAAa,EAAE;gBAAG,cAAc;gBAAK,QAAQ;gBAAc,WAAW;gBAAK;YAAO;YAClG,MAAM,OAAO,MAAM,CAAA,GAAA,+GAAA,CAAA,iBAAc,AAAD,EAAE;YAClC,aAAa;YACb,IAAI,IAAI,CAAC,EAAE,EAAE,KAAK;gBAChB,cAAc,IAAI,CAAC,EAAE,CAAC,GAAG;gBACzB,QAAQ,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,SAAS,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG;gBAC9C,WAAW,IAAI,CAAC,EAAE,CAAC,IAAI;YACzB,OAAO;gBACL,cAAc;gBACd,QAAQ;gBACR,WAAW;YACb;QACF,CAAC;IACH,GAAG;QAAC;KAAQ;IAEZ,MAAM,SAAS,CAAC,IAAY;QAC1B,QAAQ,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK,KACxC;oBAAE,GAAG,CAAC;oBAAE,UAAU;2BAAI,EAAE,QAAQ;wBAAE;4BAAE,OAAM;4BAAS,KAAI;4BAAS;wBAAK;qBAAqB;gBAAC,IAC3F;IAEN;IAEA,MAAM,SAAS,CAAC,IAAY,KAAa;QACvC,QAAQ,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA;gBACvB,IAAI,EAAE,OAAO,KAAK,IAAI,OAAO;gBAC7B,MAAM,OAAO,EAAE,QAAQ,CAAC,KAAK;gBAC7B,IAAI,CAAC,IAAI,GAAG;oBAAE,GAAG,IAAI,CAAC,IAAI;oBAAE,GAAG,KAAK;gBAAC;gBACrC,OAAO;oBAAE,GAAG,CAAC;oBAAE,UAAU;gBAAK;YAChC;IACF;IAEA,MAAM,SAAS,CAAC,IAAY;QAC1B,QAAQ,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA;gBACvB,IAAI,EAAE,OAAO,KAAK,IAAI,OAAO;gBAC7B,MAAM,OAAO,EAAE,QAAQ,CAAC,KAAK;gBAC7B,KAAK,MAAM,CAAC,KAAK;gBACjB,OAAO;oBAAE,GAAG,CAAC;oBAAE,UAAU;gBAAK;YAChC;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,UAAU,KAAK,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK,MAAM,YAAY,EAAE;QACjE,QAAQ,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK,MAAM,IAAI;oBAAE,GAAG,CAAC;oBAAE,UAAU;gBAAQ;QAChF,SAAS;YAAC,MAAK;YAAK,KAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC;YAAC,KAAI;QAAS;IAChF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,IAAI,CAAC,SAAS;gBAAE,SAAS;oBAAC,MAAK;oBAAK,KAAI;oBAA2B,KAAI;gBAAO;gBAAI;YAAO;YACzF,IAAI,CAAC,QAAQ,IAAI,IAAI;gBAAE,SAAS;oBAAC,MAAK;oBAAK,KAAI;oBAAoB,KAAI;gBAAO;gBAAI;YAAO;YAEzF,IAAI,UAAU;gBACZ,MAAM,MAAM,MAAM,CAAA,GAAA,+GAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,GAAG,EAAE;oBAAE,MAAM,QAAQ,IAAI;oBAAI;gBAAK;gBAC/E,aAAa,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,IAAI,GAAG,GAAG,MAAM;gBAC7D,SAAS;oBAAC,MAAK;oBAAK,KAAI;oBAAuB,KAAI;gBAAS;YAC9D,OAAO;gBACL,MAAM,UAAU,MAAM,CAAA,GAAA,+GAAA,CAAA,oBAAiB,AAAD,EAAE;oBAAE,MAAM,QAAQ,IAAI;oBAAI,OAAO;oBAAS;gBAAK;gBACrF,aAAa,CAAA,OAAQ;wBAAC;2BAAY;qBAAK;gBACvC,cAAc,QAAQ,GAAG;gBACzB,SAAS;oBAAC,MAAK;oBAAK,KAAI;oBAAoB,KAAI;gBAAS;YAC3D;QACF,EAAE,OAAM;YACN,SAAS;gBAAC,MAAK;gBAAK,KAAI;gBAA2B,KAAI;YAAO;QAChE;IACF;IAEA,MAAM,cAAc;QAClB,cAAc;QACd,WAAW;QACX,QAAQ;IACV;IAEA,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,CAAA,GAAA,+GAAA,CAAA,oBAAiB,AAAD,EAAE;YACxB,MAAM,OAAO,UAAU,MAAM,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK;YAC7C,aAAa;YACb,IAAI,eAAe,IAAI;gBACrB,IAAI,IAAI,CAAC,EAAE,EAAE;oBACX,cAAc,IAAI,CAAC,EAAE,CAAC,GAAG;oBACzB,WAAW,IAAI,CAAC,EAAE,CAAC,IAAI;oBACvB,QAAQ,IAAI,CAAC,EAAE,CAAC,IAAI;gBACtB,OAAO;oBACL,cAAc;oBAAK,WAAW;oBAAK,QAAQ;gBAC7C;YACF;YACA,SAAS;gBAAC,MAAK;gBAAK,KAAI;gBAAoB,KAAI;YAAS;QAC3D,EAAE,OAAM;YACN,SAAS;gBAAC,MAAK;gBAAK,KAAI;gBAAyB,KAAI;YAAO;QAC9D;IACF;IAEA,MAAM,WAAW;QACf,IAAI;YACF,IAAI,CAAC,YAAY;gBAAE,SAAS;oBAAC,MAAK;oBAAK,KAAI;oBAAkB,KAAI;gBAAO;gBAAI;YAAO;YACnF,IAAI,CAAC,WAAW;gBAAE,SAAS;oBAAC,MAAK;oBAAK,KAAI;oBAAyB,KAAI;gBAAO;gBAAI;YAAO;YACzF,MAAM,MAAM,MAAM,CAAA,GAAA,+GAAA,CAAA,mBAAgB,AAAD,EAAE;gBAAE,YAAY;gBAAY;gBAAW;gBAAO;YAAQ;YACvF,SAAS;gBAAC,MAAK;gBAAK,KAAI,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,YAAY,EAAE,IAAI,QAAQ,EAAE;gBAAC,KAAI;YAAS;QAC9F,EAAE,OAAM;YACN,SAAS;gBAAC,MAAK;gBAAK,KAAI;gBAA0B,KAAI;YAAO;QAC/D;IACF;IAEA,qBACE,8OAAC,0MAAA,CAAA,YAAS;QAAC,UAAS;QAAK,IAAI;YAAE,IAAI;QAAE;;0BACnC,8OAAC,+HAAA,CAAA,UAAgB;gBAAC,OAAO;oBAAC;wBAAC,OAAM;wBAAc,MAAK;oBAAQ;oBAAG;wBAAC,OAAM;oBAAyB;iBAAE;;;;;;0BACjG,8OAAC,6MAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,YAAY;gBAAK,YAAY;0BAAC;;;;;;0BAEvD,8OAAC,8LAAA,CAAA,QAAK;gBAAC,WAAW;oBAAE,IAAG;oBAAU,IAAG;gBAAM;gBAAG,SAAS;gBAAG,IAAI;oBAAE,IAAI;gBAAE;;kCACnE,8OAAC,0MAAA,CAAA,YAAS;wBAAC,MAAM;wBAAC,OAAM;wBAAQ,OAAO;wBAAS,UAAU,CAAA,IAAG,WAAW,EAAE,MAAM,CAAC,KAAK;wBAAG,IAAI;4BAAE,UAAU;wBAAI;kCAC1G,OAAO,GAAG,CAAC,CAAA,kBAAK,8OAAC,uMAAA,CAAA,WAAQ;gCAAa,OAAO,EAAE,GAAG;0CAAG,EAAE,IAAI;+BAA5B,EAAE,GAAG;;;;;;;;;;kCAEvC,8OAAC,0MAAA,CAAA,YAAS;wBAAC,MAAM;wBAAC,OAAM;wBAAc,OAAO;wBAAS,UAAU,CAAA,IAAG,WAAW,EAAE,MAAM,CAAC,KAAK;wBAAG,IAAI;4BAAE,UAAU;wBAAI;kCAChH,MAAM,GAAG,CAAC,CAAA,kBAAK,8OAAC,uMAAA,CAAA,WAAQ;gCAAa,OAAO,EAAE,GAAG;0CAAG,EAAE,IAAI,IAAI,EAAE,KAAK;+BAAvC,EAAE,GAAG;;;;;;;;;;kCAEtC,8OAAC,wLAAA,CAAA,MAAG;wBAAC,MAAM;;;;;;kCACX,8OAAC,iMAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAW,yBAAW,8OAAC,wJAAA,CAAA,UAAO;;;;;wBAAK,SAAS;kCAAa;;;;;;kCACzE,8OAAC,iMAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAY,yBAAW,8OAAC,yJAAA,CAAA,UAAQ;;;;;wBAAK,SAAS;kCAAc;;;;;;;;;;;;0BAG9E,8OAAC,8LAAA,CAAA,QAAK;gBAAC,WAAW;oBAAE,IAAG;oBAAU,IAAG;gBAAM;gBAAG,SAAS;;kCAEpD,8OAAC,8LAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAW,IAAI;4BAAE,GAAG;4BAAG,cAAc;4BAAG,UAAU;wBAAI;;0CACnE,8OAAC,6MAAA,CAAA,aAAU;gCAAC,SAAQ;gCAAK,YAAY;0CAAK;;;;;;0CAC1C,8OAAC,oMAAA,CAAA,UAAO;gCAAC,IAAI;oCAAE,IAAI;gCAAE;;;;;;0CACrB,8OAAC,2LAAA,CAAA,OAAI;gCAAC,KAAK;0CACR,UAAU,GAAG,CAAC,CAAA,kBACX,8OAAC,uMAAA,CAAA,WAAQ;wCAET,+BACI,8OAAC,oMAAA,CAAA,UAAO;4CAAC,OAAM;sDACf,cAAA,8OAAC,6MAAA,CAAA,aAAU;gDAAC,OAAM;gDAAQ,SAAS,IAAM,eAAe,EAAE,GAAG;0DACzD,cAAA,8OAAC,2JAAA,CAAA,UAAU;;;;;;;;;;;;;;;wCAInB,cAAc;kDAEd,cAAA,8OAAC,yNAAA,CAAA,iBAAc;4CACX,UAAU,EAAE,GAAG,KAAK;4CACpB,SAAS;gDACT,cAAc,EAAE,GAAG;gDACnB,WAAW,EAAE,IAAI;gDACjB,QAAQ,EAAE,IAAI;4CACd;sDAEA,cAAA,8OAAC,mNAAA,CAAA,eAAY;gDAAC,SAAS,EAAE,IAAI;;;;;;;;;;;uCAlB5B,EAAE,GAAG;;;;;;;;;;0CAuBhB,8OAAC,oMAAA,CAAA,UAAO;gCAAC,IAAI;oCAAE,IAAI;gCAAE;;;;;;0CACrB,8OAAC,0MAAA,CAAA,YAAS;gCAAC,OAAM;gCAAgB,SAAS;gCAAC,OAAO;gCAAS,UAAU,CAAA,IAAG,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAInG,8OAAC,8LAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAW,IAAI;4BAAE,GAAG;4BAAG,cAAc;4BAAG,MAAM;wBAAE;;0CAC7D,8OAAC,8LAAA,CAAA,QAAK;gCAAC,WAAU;gCAAM,YAAW;gCAAS,SAAS;;kDAClD,8OAAC,6MAAA,CAAA,aAAU;wCAAC,SAAQ;wCAAK,YAAY;wCAAK,IAAI;4CAAE,MAAM;wCAAE;kDAAG;;;;;;kDAC3D,8OAAC,oMAAA,CAAA,UAAO;wCAAC,OAAM;kDACb,cAAA,8OAAC,6MAAA,CAAA,aAAU;4CAAC,SAAS,IAAI,aAAa;sDAAI,cAAA,8OAAC,gKAAA,CAAA,UAAe;;;;;;;;;;;;;;;;;;;;;0CAG9D,8OAAC,oMAAA,CAAA,UAAO;gCAAC,IAAI;oCAAE,IAAI;gCAAE;;;;;;0CACrB,8OAAC,8LAAA,CAAA,QAAK;gCAAC,SAAS;0CACb,KAAK,GAAG,CAAC,CAAA,kBACR,8OAAC,8LAAA,CAAA,QAAK;wCAAiB,SAAQ;wCAAW,IAAI;4CAAE,GAAG;4CAAK,cAAc;wCAAE;kDACtE,cAAA,8OAAC,8LAAA,CAAA,QAAK;4CAAC,WAAW;gDAAE,IAAG;gDAAU,IAAG;4CAAM;4CAAG,SAAS;4CAAG,YAAW;;8DAClE,8OAAC,6MAAA,CAAA,aAAU;oDAAC,IAAI;wDAAE,UAAU;wDAAI,YAAY;oDAAI;8DAAI,QAAQ,CAAC,EAAE,OAAO,CAAC;;;;;;8DACvE,8OAAC,8LAAA,CAAA,QAAK;oDAAC,WAAU;oDAAM,SAAS;oDAAG,YAAW;oDAAS,UAAS;8DAC7D,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,oBACpB,8OAAC,8LAAA,CAAA,QAAK;4DAAW,WAAU;4DAAM,SAAS;4DAAG,YAAW;4DAAS,IAAI;gEAAE,IAAI;4DAAG;;8EAC5E,8OAAC,2LAAA,CAAA,OAAI;oEAAC,MAAK;oEAAQ,OAAO,IAAI,IAAI,KAAK,SAAS,SAAS;;;;;;8EACzD,8OAAC,0MAAA,CAAA,YAAS;oEAAC,MAAK;oEAAO,MAAK;oEAAQ,OAAO,IAAI,KAAK;oEAAE,UAAU,CAAA,IAAG,OAAO,EAAE,OAAO,EAAE,KAAK;4EAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wEAAC;;;;;;8EAClH,8OAAC,0MAAA,CAAA,YAAS;oEAAC,MAAK;oEAAO,MAAK;oEAAQ,OAAO,IAAI,GAAG;oEAAI,UAAU,CAAA,IAAG,OAAO,EAAE,OAAO,EAAE,KAAK;4EAAE,KAAK,EAAE,MAAM,CAAC,KAAK;wEAAC;;;;;;8EAChH,8OAAC,6MAAA,CAAA,aAAU;oEAAC,MAAK;oEAAQ,OAAM;oEAAQ,SAAS,IAAI,OAAO,EAAE,OAAO,EAAE;8EAAM,cAAA,8OAAC,2JAAA,CAAA,UAAU;wEAAC,UAAS;;;;;;;;;;;;2DAJvF;;;;;;;;;;8DAQhB,8OAAC,wLAAA,CAAA,MAAG;oDAAC,MAAM;;;;;;8DACX,8OAAC,8LAAA,CAAA,QAAK;oDAAC,WAAU;oDAAM,SAAS;;sEAC9B,8OAAC,iMAAA,CAAA,SAAM;4DAAC,MAAK;4DAAQ,SAAQ;4DAAW,SAAS,IAAI,OAAO,EAAE,OAAO,EAAC;sEAAS;;;;;;sEAC/E,8OAAC,iMAAA,CAAA,SAAM;4DAAC,MAAK;4DAAQ,SAAQ;4DAAO,SAAS,IAAI,OAAO,EAAE,OAAO,EAAC;sEAAU;;;;;;;;;;;;;;;;;;uCAhBtE,EAAE,OAAO;;;;;;;;;;;;;;;;kCAyB3B,8OAAC,8LAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAW,IAAI;4BAAE,GAAG;4BAAG,cAAc;4BAAG,UAAU;wBAAI;;0CACnE,8OAAC,6MAAA,CAAA,aAAU;gCAAC,SAAQ;gCAAK,YAAY;0CAAK;;;;;;0CAC1C,8OAAC,oMAAA,CAAA,UAAO;gCAAC,IAAI;oCAAE,IAAI;gCAAE;;;;;;0CACrB,8OAAC,8LAAA,CAAA,QAAK;gCAAC,SAAS;;kDACd,8OAAC,0MAAA,CAAA,YAAS;wCAAC,OAAM;wCAAiB,MAAK;wCAAO,OAAO;wCAAW,UAAU,CAAA,IAAG,aAAa,EAAE,MAAM,CAAC,KAAK;wCAAG,iBAAiB;4CAAE,QAAQ;wCAAK;;;;;;kDAC3I,8OAAC,0MAAA,CAAA,YAAS;wCAAC,OAAM;wCAAgB,MAAK;wCAAS,OAAO;wCAAO,UAAU,CAAA,IAAG,SAAS,OAAO,EAAE,MAAM,CAAC,KAAK,KAAG;wCAAI,YAAY;4CAAE,KAAI;4CAAG,KAAI;wCAAG;;;;;;kDAC3I,8OAAC,0MAAA,CAAA,YAAS;wCAAC,MAAM;wCAAC,OAAM;wCAAW,OAAO,UAAU,QAAQ;wCAAM,UAAU,CAAA,IAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAG;;0DACzG,8OAAC,uMAAA,CAAA,WAAQ;gDAAC,OAAM;0DAAM;;;;;;0DACtB,8OAAC,uMAAA,CAAA,WAAQ;gDAAC,OAAM;0DAAK;;;;;;;;;;;;kDAEvB,8OAAC,iMAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAY,SAAS;kDAAU;;;;;;kDAC/C,8OAAC,6MAAA,CAAA,aAAU;wCAAC,SAAQ;wCAAQ,OAAM;kDAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAOzD,8OAAC,uMAAA,CAAA,WAAQ;gBAAC,MAAM,MAAM,IAAI;gBAAE,kBAAkB;gBAAM,SAAS,IAAI,SAAS,CAAA,IAAG,CAAC;4BAAC,GAAG,CAAC;4BAAE,MAAK;wBAAK,CAAC;0BAC9F,cAAA,8OAAC,8LAAA,CAAA,QAAK;oBAAC,UAAU,MAAM,GAAG;oBAAE,SAAQ;8BAAU,MAAM,GAAG;;;;;;;;;;;;;;;;;AAI/D","debugId":null}}]
}