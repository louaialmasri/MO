{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/services/api.ts"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport type User = {\r\n  _id: string\r\n  email: string\r\n  role: 'user' | 'admin'\r\n}\r\n\r\nexport type Service = {\r\n  _id: string\r\n  name: string\r\n  duration?: number // Dauer in Minuten\r\n}\r\n\r\nexport type Booking = {\r\n  _id: string\r\n  user: string\r\n  serviceId: string\r\n  dateTime: string\r\n}\r\n\r\nexport type StaffBooking  = {\r\n  _id: string\r\n  user: {\r\n    email: string\r\n  }\r\n  service: {\r\n    _id: string\r\n    name: string\r\n    duration?: number\r\n  }\r\n  dateTime: string\r\n}\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n\r\n// Token automatisch mitschicken\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n  }\r\n  return config\r\n})\r\n\r\n// SERVICE API\r\n\r\nexport async function fetchServices(): Promise<Service[]> {\r\n  const res = await api.get('/services')\r\n  return res.data.services\r\n}\r\n\r\nexport async function createService(name: string, duration: number, token: string) {\r\n  const res = await api.post('/services', { name, duration }, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\nexport async function deleteServiceById(id: string, token: string) {\r\n  const res = await api.delete(`/services/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\n// BOOKING API\r\n\r\nexport async function createBooking(serviceId: string, dateTime: string, staffId: string, token: string) {\r\n  const res = await api.post('/bookings', {\r\n    serviceId,\r\n    dateTime,\r\n    staffId,\r\n  }, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\nexport async function getUserBookings(token: string): Promise<Booking[]> {\r\n  const res = await api.get('/bookings/user', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data.bookings\r\n}\r\n\r\nexport async function getAllBookings(token: string): Promise<Booking[]> {\r\n  const res = await api.get('/bookings/all', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data.bookings\r\n}\r\n\r\nexport async function deleteBooking(id: string, token: string) {\r\n  const res = await api.delete(`/bookings/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\n// AUTH API\r\n\r\nexport async function login(email: string, password: string) {\r\n  const res = await api.post('/login', { email, password })\r\n  return res.data // { token, user: { email, role } }\r\n}\r\n\r\nexport async function register(\r\n  email: string,\r\n  password: string,\r\n  name?: string,\r\n  address?: string,\r\n  phone?: string,\r\n  role: 'user' | 'staff' | 'admin' = 'user'\r\n) {\r\n  const res = await api.post('/register', {\r\n    email,\r\n    password,\r\n    name,\r\n    address,\r\n    phone,\r\n    role,\r\n  });\r\n  return res.data;\r\n}\r\n\r\n// ➡ Alle Mitarbeiter abrufen\r\nexport async function fetchStaff(): Promise<User[]> {\r\n  const res = await api.get('/users/staff') \r\n  return res.data.users\r\n}\r\n\r\n// ➡ Buchungen für Mitarbeiter abrufen\r\nexport async function getStaffBookings(token: string): Promise<StaffBooking[]> {\r\n  const res = await api.get('/bookings/staff', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data.bookings\r\n}\r\n\r\n// ➡ Alle Nutzer abrufen\r\nexport async function fetchAllUsers(token: string) {\r\n  const res = await api.get('/users', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n  return res.data.users\r\n}\r\n\r\n// ➡ Mitarbeiterrolle aktualisieren\r\nexport async function updateUserRole(userId: string, role: string, token: string) {\r\n  const res = await api.patch(`/users/${userId}/role`, { role }, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n  return res.data.user\r\n}\r\n\r\n// ➡ Buchungen bearbeiten\r\nexport async function updateBooking(\r\n  id: string,\r\n  data: { serviceId?: string; dateTime?: string },\r\n  token: string\r\n) {\r\n  const res = await api.patch(`/bookings/bookings/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n  return res.data.booking\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/app/staff-dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useAuth } from '@/context/AuthContext'\r\nimport { getStaffBookings, register, StaffBooking, Service, fetchServices, updateBooking, User, fetchAllUsers } from '@/services/api'\r\nimport {\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  Tooltip,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Select\r\n} from '@mui/material'\r\nimport { motion } from 'framer-motion'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport { deleteBooking } from '@/services/api'\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'\r\nimport { de } from 'date-fns/locale' \r\n\r\nexport default function StaffDashboardPage() {\r\n  const { user, token } = useAuth()\r\n  const router = useRouter()\r\n  const [bookings, setBookings] = useState<StaffBooking[]>([])\r\n  const [services, setServices] = useState<Service[]>([])\r\n  const [users, setUsers] = useState<User[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [selectedBooking, setSelectedBooking] = useState<StaffBooking | null>(null)\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [editForm, setEditForm] = useState({ serviceId: '', dateTime: '' })\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    address: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    role: 'user',\r\n  })\r\n  const [showUserDialog, setShowUserDialog] = useState(false)\r\n  const [userRoleFilter, setUserRoleFilter] = useState<'all' | 'user' | 'staff' | 'admin'>('all')\r\n\r\n  useEffect(() => {\r\n    if (!user) return\r\n\r\n    if (user.role !== 'staff') {\r\n      router.push('/login')\r\n      return\r\n    }\r\n\r\n    const loadData = async () => {\r\n      try {\r\n        const [bookingsData, servicesData, usersData] = await Promise.all([\r\n          getStaffBookings(token!),\r\n          fetchServices(),\r\n          fetchAllUsers(token!)\r\n        ])\r\n        setBookings(bookingsData)\r\n        setServices(servicesData)\r\n        setUsers(usersData)\r\n      } catch (err) {\r\n        console.error('Fehler beim Laden der Buchungen oder Services:', err)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    loadData()\r\n  }, [user, token, router])\r\n\r\n  if (!user || loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n        <CircularProgress />\r\n        <Typography ml={2}>Lade Buchungen...</Typography>\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  // Kalender-Einträge vorbereiten\r\n  const calendarEvents = bookings\r\n    .filter(b => b.service && b.user)\r\n    .map((b) => {\r\n      const duration = b.service!.duration ?? 30\r\n      const start = new Date(b.dateTime)\r\n      const end = new Date(start.getTime() + duration * 60000)\r\n\r\n      return {\r\n        id: b._id,\r\n        title: `${b.service!.name} – ${b.user!.email}`,\r\n        start: start.toISOString(),\r\n        end: end.toISOString(),\r\n      }\r\n    })\r\n\r\n  const isCancellable = (dateTime: string) => {\r\n    if (user?.role === 'staff' || user?.role === 'admin') return true\r\n\r\n    const now = new Date()\r\n    const bookingDate = new Date(dateTime)\r\n    const diffHours = (bookingDate.getTime() - now.getTime()) / (1000 * 60 * 60)\r\n    return diffHours >= 24\r\n  }\r\n\r\n  const handleOpenDialog = () => setOpenDialog(true)\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false)\r\n    setFormData({\r\n      name: '',\r\n      address: '',\r\n      phone: '',\r\n      email: '',\r\n      password: '',\r\n      role: 'user',\r\n    })\r\n  }\r\n\r\n  const handleCreateUser = async () => {\r\n    try {\r\n      await register(\r\n        formData.email,\r\n        formData.password,\r\n        formData.name,\r\n        formData.address,\r\n        formData.phone,\r\n        'user'\r\n      )\r\n      alert('Benutzer erfolgreich erstellt!')\r\n      handleCloseDialog()\r\n    } catch (err) {\r\n      console.error('Fehler beim Erstellen des Benutzers:', err)\r\n      alert('Fehler beim Erstellen des Benutzers.')\r\n    }\r\n  }\r\n\r\n  // Wenn eine Buchung ausgewählt wird, Editier-Formular befüllen\r\n  const handleBookingClick = (booking: StaffBooking) => {\r\n    const localDate = new Date(booking.dateTime)\r\n    const offset = localDate.getTimezoneOffset()\r\n    localDate.setMinutes(localDate.getMinutes() - offset)\r\n\r\n    setSelectedBooking(booking)\r\n    setEditForm({\r\n      serviceId: booking.service._id,\r\n      dateTime: localDate.toISOString().slice(0, 16), // korrekt formatierte lokale Zeit\r\n    })\r\n    setEditMode(false)\r\n  }\r\n\r\n\r\n  const handleEditSave = async () => {\r\n    if (!selectedBooking) return\r\n    try {\r\n      await updateBooking(selectedBooking._id, {\r\n        serviceId: editForm.serviceId,\r\n        dateTime: editForm.dateTime,\r\n      }, token!)\r\n      setBookings(prev =>\r\n        prev.map(b =>\r\n          b._id === selectedBooking._id\r\n            ? {\r\n                ...b,\r\n                service: services.find(s => s._id === editForm.serviceId)!,\r\n                dateTime: editForm.dateTime,\r\n              }\r\n            : b\r\n        )\r\n      )\r\n      setSelectedBooking(null)\r\n      setEditMode(false)\r\n    } catch (err) {\r\n      alert('Fehler beim Speichern der Änderungen.')\r\n    }\r\n  }\r\n  // Gefilterte User-Liste\r\n  const filteredUsers = userRoleFilter === 'all'\r\n    ? users\r\n    : users.filter(u => u.role === userRoleFilter)\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      <Box maxWidth=\"900px\" margin=\"auto\" mt={5} p={2}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Kalender – Deine Buchungen\r\n        </Typography>\r\n\r\n        <FullCalendar\r\n          plugins={[timeGridPlugin, dayGridPlugin, interactionPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          locale=\"de\"\r\n          headerToolbar={{\r\n            start: 'prev,next today',\r\n            center: 'title',\r\n            end: 'timeGridDay,timeGridWeek,dayGridMonth'\r\n          }}\r\n          allDaySlot={false}\r\n          slotMinTime=\"09:00:00\"\r\n          slotMaxTime=\"20:00:00\"\r\n          slotMinWidth={100}\r\n          events={calendarEvents}\r\n          height=\"auto\"\r\n          eventClick={(info) => {\r\n            const clickedBooking = bookings.find(b => b._id === info.event.id)\r\n            if (clickedBooking) handleBookingClick(clickedBooking)\r\n          }}\r\n        />\r\n\r\n        {/* Buchungsdetails- und Bearbeiten-Dialog */}\r\n        <Dialog open={!!selectedBooking} onClose={() => { setSelectedBooking(null); setEditMode(false) }}>\r\n          <DialogTitle>\r\n            {editMode ? 'Buchung bearbeiten' : 'Buchungsdetails'}\r\n          </DialogTitle>\r\n          <DialogContent sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n            {editMode ? (\r\n              <>\r\n                <TextField\r\n                  select\r\n                  label=\"Service\"\r\n                  value={editForm.serviceId}\r\n                  onChange={e => setEditForm(f => ({ ...f, serviceId: e.target.value }))}\r\n                  fullWidth\r\n                >\r\n                  {services.map(s => (\r\n                    <MenuItem key={s._id} value={s._id}>{s.name}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n                <TextField\r\n                  label=\"Datum & Uhrzeit\"\r\n                  type=\"datetime-local\"\r\n                  value={editForm.dateTime}\r\n                  onChange={e => setEditForm(f => ({ ...f, dateTime: e.target.value }))}\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Typography gutterBottom>\r\n                  <strong>Service:</strong> {selectedBooking?.service.name}\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  <strong>Kunde:</strong> {selectedBooking?.user.email}\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  <strong>Datum:</strong> {new Date(selectedBooking?.dateTime || '').toLocaleString('de-DE')}\r\n                </Typography>\r\n              </>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {editMode ? (\r\n              <>\r\n                <Button onClick={() => setEditMode(false)}>Abbrechen</Button>\r\n                <Button variant=\"contained\" onClick={handleEditSave}>Speichern</Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedBooking && isCancellable(selectedBooking.dateTime) ? (\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (!selectedBooking) return\r\n                      deleteBooking(selectedBooking._id, token!)\r\n                        .then(() => {\r\n                          setBookings(prev => prev.filter(b => b._id !== selectedBooking._id))\r\n                          setSelectedBooking(null)\r\n                        })\r\n                        .catch(err => {\r\n                          console.error('Stornierung fehlgeschlagen:', err)\r\n                          alert('Stornierung fehlgeschlagen.')\r\n                        })\r\n                    }}\r\n                    color=\"error\"\r\n                  >\r\n                    Stornieren\r\n                  </Button>\r\n                ) : (\r\n                  <Tooltip title=\"Stornierung nicht mehr möglich (weniger als 24h)\">\r\n                    <span>\r\n                      <Button disabled>Stornieren</Button>\r\n                    </span>\r\n                  </Tooltip>\r\n                )}\r\n                <Button onClick={() => setEditMode(true)} variant=\"contained\" color=\"primary\">\r\n                  Bearbeiten\r\n                </Button>\r\n                <Button onClick={() => setSelectedBooking(null)}>Schließen</Button>\r\n              </>\r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Benutzer anlegen Button */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleOpenDialog}\r\n          sx={{ mt: 3, mb: 2, mr: 2 }}\r\n        >\r\n          Benutzer anlegen\r\n        </Button>\r\n        {/* Nutzer anzeigen Button */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setShowUserDialog(true)}\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Nutzer anzeigen\r\n        </Button>\r\n      </Box>\r\n      {/* Nutzerliste im Dialog */}\r\n      <Dialog open={showUserDialog} onClose={() => setShowUserDialog(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          Nutzerliste\r\n          <Button onClick={() => setShowUserDialog(false)} sx={{ color: '#1976d2' }}>\r\n            SCHLIESSEN\r\n          </Button>\r\n        </DialogTitle>\r\n        <DialogContent dividers sx={{ backgroundColor: '#fafafa' }}>\r\n          <FormControl fullWidth sx={{ mb: 3 }}>\r\n            <InputLabel id=\"role-filter-label\" sx={{ color: '#222' }}>Nach Rolle filtern</InputLabel>\r\n            <Select\r\n              labelId=\"role-filter-label\"\r\n              label=\"Nach Rolle filtern\"\r\n              value={userRoleFilter}\r\n              onChange={(e) => setUserRoleFilter(e.target.value as any)}\r\n              sx={{\r\n                backgroundColor: '#fff',\r\n                color: '#222',\r\n                '& .MuiSelect-icon': { color: '#222' },\r\n              }}\r\n            >\r\n              <MenuItem value=\"all\">Alle</MenuItem>\r\n              <MenuItem value=\"user\">User</MenuItem>\r\n              <MenuItem value=\"staff\">Staff</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <List>\r\n            {filteredUsers.map((u) => (\r\n              <ListItem key={u._id} disableGutters sx={{ alignItems: 'flex-start' }}>\r\n                <ListItemIcon sx={{ minWidth: '30px' }}>📧</ListItemIcon>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography sx={{ fontWeight: 500 }}>\r\n                      {u.email || '—'} — Rolle: {u.role}\r\n                    </Typography>\r\n                  }\r\n                />\r\n                {/* Beispiel: Staff kann keine Rollen ändern, daher kein Button */}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n      </Dialog>\r\n      {/* Dialog zum Anlegen eines neuen Benutzers */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n        <DialogTitle>Neuen Benutzer anlegen</DialogTitle>\r\n        <DialogContent sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 1 }}>\r\n          <TextField label=\"Name\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\r\n          <TextField label=\"Adresse\" value={formData.address} onChange={(e) => setFormData({ ...formData, address: e.target.value })} />\r\n          <TextField label=\"Telefonnummer\" value={formData.phone} onChange={(e) => setFormData({ ...formData, phone: e.target.value })} />\r\n          <TextField label=\"E-Mail\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\r\n          <TextField label=\"Passwort\" type=\"password\" value={formData.password} onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\r\n          {/* Rolle anzeigen, aber nicht editierbar */}\r\n          <TextField label=\"Rolle\" value=\"user\" InputProps={{ readOnly: true }} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Abbrechen</Button>\r\n          <Button variant=\"contained\" onClick={handleCreateUser}>Erstellen</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </motion.div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}