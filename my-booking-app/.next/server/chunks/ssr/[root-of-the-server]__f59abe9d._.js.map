{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/services/api.ts"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport type User = {\r\n  _id: string\r\n  email: string\r\n  role: 'user' | 'admin'\r\n}\r\n\r\nexport type Service = {\r\n  _id: string\r\n  name: string\r\n  duration?: number // Dauer in Minuten\r\n}\r\n\r\nexport type Booking = {\r\n  _id: string\r\n  user: string\r\n  serviceId: string\r\n  dateTime: string\r\n}\r\n\r\nexport type StaffBooking  = {\r\n  _id: string\r\n  user: {\r\n    email: string\r\n  }\r\n  service: {\r\n    _id: string\r\n    name: string\r\n    duration?: number\r\n  }\r\n  dateTime: string\r\n}\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n\r\n// Token automatisch mitschicken\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n  }\r\n  return config\r\n})\r\n\r\n// SERVICE API\r\n\r\nexport async function fetchServices(): Promise<Service[]> {\r\n  const res = await api.get('/services')\r\n  return res.data.services\r\n}\r\n\r\nexport async function createService(name: string, duration: number, token: string) {\r\n  const res = await api.post('/services', { name, duration }, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\nexport async function deleteServiceById(id: string, token: string) {\r\n  const res = await api.delete(`/services/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\n// BOOKING API\r\n\r\nexport async function createBooking(serviceId: string, dateTime: string, staffId: string, token: string) {\r\n  const res = await api.post('/bookings', {\r\n    serviceId,\r\n    dateTime,\r\n    staffId,\r\n  }, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\nexport async function getUserBookings(token: string): Promise<Booking[]> {\r\n  const res = await api.get('/bookings/user', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data.bookings\r\n}\r\n\r\nexport async function getAllBookings(token: string): Promise<Booking[]> {\r\n  const res = await api.get('/bookings/all', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data.bookings\r\n}\r\n\r\nexport async function deleteBooking(id: string, token: string) {\r\n  const res = await api.delete(`/bookings/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data\r\n}\r\n\r\n// AUTH API\r\n\r\nexport async function login(email: string, password: string) {\r\n  const res = await api.post('/login', { email, password })\r\n  return res.data // { token, user: { email, role } }\r\n}\r\n\r\nexport async function register(\r\n  email: string,\r\n  password: string,\r\n  name?: string,\r\n  address?: string,\r\n  phone?: string,\r\n  role: 'user' | 'staff' | 'admin' = 'user'\r\n) {\r\n  const res = await api.post('/register', {\r\n    email,\r\n    password,\r\n    name,\r\n    address,\r\n    phone,\r\n    role,\r\n  });\r\n  return res.data;\r\n}\r\n\r\n// ➡ Alle Mitarbeiter abrufen\r\nexport async function fetchStaff(): Promise<User[]> {\r\n  const res = await api.get('/users/staff') \r\n  return res.data.users\r\n}\r\n\r\n// ➡ Buchungen für Mitarbeiter abrufen\r\nexport async function getStaffBookings(token: string): Promise<StaffBooking[]> {\r\n  const res = await api.get('/bookings/staff', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n  return res.data.bookings\r\n}\r\n\r\n// ➡ Alle Nutzer abrufen\r\nexport async function fetchAllUsers(token: string) {\r\n  const res = await api.get('/users', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n  return res.data.users\r\n}\r\n\r\n// ➡ Mitarbeiterrolle aktualisieren\r\nexport async function updateUserRole(userId: string, role: string, token: string) {\r\n  const res = await api.patch(`/users/${userId}/role`, { role }, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n  return res.data.user\r\n}\r\n\r\n// ➡ Buchungen bearbeiten\r\nexport async function updateBooking(\r\n  id: string,\r\n  data: { serviceId?: string; dateTime?: string },\r\n  token: string\r\n) {\r\n  const res = await api.patch(`/bookings/bookings/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n  return res.data.booking\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/app/booking/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useAuth } from '@/context/AuthContext'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useEffect, useState } from 'react'\r\nimport { fetchServices, fetchStaff, createBooking, User } from '@/services/api'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\ntype Service = {\r\n  _id: string\r\n  name: string\r\n}\r\n\r\ntype Staff = {\r\n  _id: string\r\n  email: string\r\n}\r\n\r\nexport default function BookingPage() {\r\n  const { user, token } = useAuth()\r\n  const router = useRouter()\r\n\r\n  const [services, setServices] = useState<Service[]>([])\r\n  const [staff, setStaff] = useState<User[]>([])\r\n  const [selectedService, setSelectedService] = useState('')\r\n  const [selectedStaff, setSelectedStaff] = useState('')\r\n  const [dateTime, setDateTime] = useState<Date | null>(null)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      router.push('/login')\r\n      return\r\n    }\r\n\r\n    const load = async () => {\r\n      try {\r\n        const [servicesRes, staffRes] = await Promise.all([fetchServices(), fetchStaff()])\r\n        setServices(servicesRes)\r\n        setStaff(staffRes)\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    }\r\n\r\n    load()\r\n  }, [user, router])\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n\r\n    if (!selectedService || !selectedStaff || !dateTime) {\r\n      setError('Bitte fülle alle Felder aus')\r\n      return\r\n    }\r\n\r\n    try {\r\n      await createBooking(selectedService, dateTime.toISOString(), selectedStaff, token!)\r\n      router.push('/dashboard')\r\n    } catch (err) {\r\n      console.error(err)\r\n      setError('Buchung fehlgeschlagen')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: '500px', margin: '0 auto', padding: '2rem' }}>\r\n      <h2>Termin buchen</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Service:</label>\r\n        <select value={selectedService} onChange={(e) => setSelectedService(e.target.value)} required>\r\n          <option value=\"\">Bitte wählen</option>\r\n          {services.map((s) => (\r\n            <option key={s._id} value={s._id}>{s.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <br /><br />\r\n\r\n        <label>Friseur (Staff):</label>\r\n        <select value={selectedStaff} onChange={(e) => setSelectedStaff(e.target.value)} required>\r\n          <option value=\"\">Bitte wählen</option>\r\n          {staff.map((s) => (\r\n            <option key={s._id} value={s._id}>{s.email}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <br /><br />\r\n\r\n        <label>Datum & Uhrzeit:</label>\r\n        <DatePicker\r\n          selected={dateTime}\r\n          onChange={(date) => setDateTime(date)}\r\n          showTimeSelect\r\n          timeFormat=\"HH:mm\"\r\n          timeIntervals={30}\r\n          dateFormat=\"Pp\"\r\n          minDate={new Date()}\r\n          placeholderText=\"Wähle Datum und Uhrzeit\"\r\n        />\r\n\r\n        <br /><br />\r\n\r\n        <button type=\"submit\">Buchen</button>\r\n\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}