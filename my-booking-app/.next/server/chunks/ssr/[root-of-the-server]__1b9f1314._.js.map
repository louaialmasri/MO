{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/services/api.ts"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api', // Anpassen an dein Backend\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n\r\ntype User = {\r\n  id: number;\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\ntype Service = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\ntype Booking = {\r\n  id: number;\r\n  user: string; // E-Mail oder ID\r\n  serviceId: number;\r\n  dateTime: string;\r\n};\r\n\r\n// Dummy-DB\r\nexport const services: Service[] = [\r\n  { id: 1, name: 'Haarschnitt' },\r\n  { id: 2, name: 'Bart trimmen' },\r\n  { id: 3, name: 'Massage' },\r\n];\r\n\r\nlet bookings: Booking[] = [];\r\nlet bookingIdCounter = 1;\r\n\r\n// Buchung erstellen\r\nexport function createBooking(user: string, serviceId: number, dateTime: string): Booking {\r\n  const booking = {\r\n    id: bookingIdCounter++,\r\n    user,\r\n    serviceId,\r\n    dateTime,\r\n  };\r\n  bookings.push(booking);\r\n  return booking;\r\n}\r\n\r\n// Alle Buchungen eines Users\r\nexport function getUserBookings(user: string): Booking[] {\r\n  return bookings.filter((b) => b.user === user);\r\n}\r\n\r\nlet users: User[] = []; // unser Fake-DB\r\n\r\nlet userIdCounter = 1;\r\n\r\nexport function registerUser(email: string, password: string): { success: boolean; message: string } {\r\n  const exists = users.find(user => user.email === email);\r\n  if (exists) {\r\n    return { success: false, message: 'User already exists' };\r\n  }\r\n  users.push({ id: userIdCounter++, email, password });\r\n  return { success: true, message: 'User registered successfully' };\r\n}\r\n\r\nexport function loginUser(email: string, password: string): { success: boolean; message: string } {\r\n  const user = users.find(u => u.email === email && u.password === password);\r\n  if (!user) {\r\n    return { success: false, message: 'Invalid credentials' };\r\n  }\r\n  return { success: true, message: 'Login successful' };\r\n}\r\n\r\nexport default api\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAqBO,MAAM,WAAsB;IACjC;QAAE,IAAI;QAAG,MAAM;IAAc;IAC7B;QAAE,IAAI;QAAG,MAAM;IAAe;IAC9B;QAAE,IAAI;QAAG,MAAM;IAAU;CAC1B;AAED,IAAI,WAAsB,EAAE;AAC5B,IAAI,mBAAmB;AAGhB,SAAS,cAAc,IAAY,EAAE,SAAiB,EAAE,QAAgB;IAC7E,MAAM,UAAU;QACd,IAAI;QACJ;QACA;QACA;IACF;IACA,SAAS,IAAI,CAAC;IACd,OAAO;AACT;AAGO,SAAS,gBAAgB,IAAY;IAC1C,OAAO,SAAS,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;AAC3C;AAEA,IAAI,QAAgB,EAAE,EAAE,gBAAgB;AAExC,IAAI,gBAAgB;AAEb,SAAS,aAAa,KAAa,EAAE,QAAgB;IAC1D,MAAM,SAAS,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK;IACjD,IAAI,QAAQ;QACV,OAAO;YAAE,SAAS;YAAO,SAAS;QAAsB;IAC1D;IACA,MAAM,IAAI,CAAC;QAAE,IAAI;QAAiB;QAAO;IAAS;IAClD,OAAO;QAAE,SAAS;QAAM,SAAS;IAA+B;AAClE;AAEO,SAAS,UAAU,KAAa,EAAE,QAAgB;IACvD,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;IACjE,IAAI,CAAC,MAAM;QACT,OAAO;YAAE,SAAS;YAAO,SAAS;QAAsB;IAC1D;IACA,OAAO;QAAE,SAAS;QAAM,SAAS;IAAmB;AACtD;uCAEe","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/app/booking/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { services, createBooking } from '@/services/api'\r\nimport { useAuth } from '@/context/AuthContext'\r\nimport dynamic from 'next/dynamic'\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl\r\n} from '@mui/material'\r\n\r\nfunction BookingPage() {\r\n  const router = useRouter()\r\n  const { user } = useAuth()\r\n\r\n  const [serviceId, setServiceId] = useState<number>(services[0].id)\r\n  const [dateTime, setDateTime] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const handleBooking = () => {\r\n    if (!user) {\r\n      router.push('/login')\r\n      return\r\n    }\r\n\r\n    if (!dateTime) {\r\n      setError('Bitte Datum und Uhrzeit w√§hlen')\r\n      return\r\n    }\r\n\r\n    createBooking(user, serviceId, dateTime)\r\n    router.push('/dashboard')\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" maxWidth={400} margin=\"auto\" gap={3} mt={10}>\r\n      <Typography variant=\"h5\">Termin buchen</Typography>\r\n\r\n      <FormControl fullWidth>\r\n        <InputLabel>Dienstleistung</InputLabel>\r\n        <Select\r\n          value={serviceId}\r\n          label=\"Dienstleistung\"\r\n          onChange={(e) => setServiceId(Number(e.target.value))}\r\n        >\r\n          {services.map((service) => (\r\n            <MenuItem key={service.id} value={service.id}>\r\n              {service.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <TextField\r\n        label=\"Datum & Uhrzeit\"\r\n        type=\"datetime-local\"\r\n        InputLabelProps={{ shrink: true }}\r\n        value={dateTime}\r\n        onChange={(e) => setDateTime(e.target.value)}\r\n      />\r\n\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n      {success && <Typography color=\"primary\">Termin erfolgreich gebucht!</Typography>}\r\n\r\n      <Button variant=\"contained\" onClick={handleBooking}>\r\n        Buchen\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\nexport default dynamic(() => Promise.resolve(BookingPage), { ssr: false })\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;;;;AAkBA,SAAS;IACP,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAEvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,+GAAA,CAAA,WAAQ,CAAC,EAAE,CAAC,EAAE;IACjE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,gBAAgB;QACpB,IAAI,CAAC,MAAM;YACT,OAAO,IAAI,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,UAAU;YACb,SAAS;YACT;QACF;QAEA,CAAA,GAAA,+GAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,WAAW;QAC/B,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC,wLAAA,CAAA,MAAG;QAAC,SAAQ;QAAO,eAAc;QAAS,UAAU;QAAK,QAAO;QAAO,KAAK;QAAG,IAAI;;0BAClF,8OAAC,6MAAA,CAAA,aAAU;gBAAC,SAAQ;0BAAK;;;;;;0BAEzB,8OAAC,gNAAA,CAAA,cAAW;gBAAC,SAAS;;kCACpB,8OAAC,6MAAA,CAAA,aAAU;kCAAC;;;;;;kCACZ,8OAAC,iMAAA,CAAA,SAAM;wBACL,OAAO;wBACP,OAAM;wBACN,UAAU,CAAC,IAAM,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK;kCAElD,+GAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,wBACb,8OAAC,uMAAA,CAAA,WAAQ;gCAAkB,OAAO,QAAQ,EAAE;0CACzC,QAAQ,IAAI;+BADA,QAAQ,EAAE;;;;;;;;;;;;;;;;0BAO/B,8OAAC,0MAAA,CAAA,YAAS;gBACR,OAAM;gBACN,MAAK;gBACL,iBAAiB;oBAAE,QAAQ;gBAAK;gBAChC,OAAO;gBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;YAG5C,uBAAS,8OAAC,6MAAA,CAAA,aAAU;gBAAC,OAAM;0BAAS;;;;;;YACpC,yBAAW,8OAAC,6MAAA,CAAA,aAAU;gBAAC,OAAM;0BAAU;;;;;;0BAExC,8OAAC,iMAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAY,SAAS;0BAAe;;;;;;;;;;;;AAK1D;uCACe,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE,IAAM,QAAQ,OAAO,CAAC,cAAc;IAAE,KAAK;AAAM","debugId":null}}]
}