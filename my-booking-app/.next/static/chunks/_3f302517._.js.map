{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/components/AdminBreadcrumbs.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Breadcrumbs, Link as MUILink, Typography } from '@mui/material'\r\nimport Link from 'next/link'\r\n\r\ntype Crumb = { label: string; href?: string }\r\n\r\nexport default function AdminBreadcrumbs({ items }: { items: Crumb[] }) {\r\n  const last = items[items.length - 1]\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" sx={{ mb: 2 }}>\r\n      {items.slice(0, -1).map((c) =>\r\n        c.href ? (\r\n          <MUILink key={c.label} component={Link} href={c.href} underline=\"hover\" color=\"inherit\">\r\n            {c.label}\r\n          </MUILink>\r\n        ) : (\r\n          <Typography key={c.label} color=\"text.secondary\">{c.label}</Typography>\r\n        )\r\n      )}\r\n      <Typography color=\"text.primary\" fontWeight={600}>{last.label}</Typography>\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AAHA;;;;AAOe,SAAS,iBAAiB,EAAE,KAAK,EAAsB;IACpE,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE;IACpC,qBACE,6LAAC,mNAAA,CAAA,cAAW;QAAC,cAAW;QAAa,IAAI;YAAE,IAAI;QAAE;;YAC9C,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IACvB,EAAE,IAAI,iBACJ,6LAAC,8LAAA,CAAA,OAAO;oBAAe,WAAW,+JAAA,CAAA,UAAI;oBAAE,MAAM,EAAE,IAAI;oBAAE,WAAU;oBAAQ,OAAM;8BAC3E,EAAE,KAAK;mBADI,EAAE,KAAK;;;;yCAIrB,6LAAC,gNAAA,CAAA,aAAU;oBAAe,OAAM;8BAAkB,EAAE,KAAK;mBAAxC,EAAE,KAAK;;;;;0BAG5B,6LAAC,gNAAA,CAAA,aAAU;gBAAC,OAAM;gBAAe,YAAY;0BAAM,KAAK,KAAK;;;;;;;;;;;;AAGnE;KAhBwB","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/app/admin/catalog/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useAuth } from '@/context/AuthContext'\r\nimport {\r\n  fetchSalons, createSalonApi, deleteSalonApi,\r\n  fetchGlobalStaff, createGlobalStaff, deleteGlobalUser,\r\n  fetchGlobalServices, createGlobalService, deleteGlobalService,\r\n  listStaffAssignmentsForSalon, assignStaffToSalon, unassignStaffFromSalon,\r\n  listServiceAssignmentsForSalon, assignServiceToSalon, unassignServiceFromSalon,\r\n  type Salon, type GlobalStaff, type GlobalService,\r\n  SalonGuard,\r\n  fetchSalonsWithGuards, updateUserRole, \r\n  updateGlobalService\r\n} from '@/services/api'\r\n\r\nimport {\r\n  Container, Paper, Tabs, Tab, Divider, Stack, Box, Typography, TextField, MenuItem,\r\n  Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem,\r\n  ListItemText, Tooltip, Snackbar, Alert, Select, FormControl, InputLabel\r\n} from '@mui/material'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport TuneIcon from '@mui/icons-material/Tune'\r\nimport AdminBreadcrumbs from '@/components/AdminBreadcrumbs'\r\n\r\nfunction fuzzy(txt: string, q: string) { return txt.toLowerCase().includes(q.toLowerCase()) }\r\n\r\nexport default function AdminCatalogPage() {\r\n  const { user, loading } = useAuth()\r\n  const router = useRouter()\r\n\r\n  const [tab, setTab] = useState<'staff'|'services'|'salons'>('staff')\r\n  const [salons, setSalons] = useState<Salon[]>([])\r\n  const [salonId, setSalonId] = useState<string>('')\r\n\r\n  // global catalogs\r\n  const [gStaff, setGStaff] = useState<GlobalStaff[]>([])\r\n  const [gServices, setGServices] = useState<GlobalService[]>([])\r\n\r\n  // assignments\r\n  const [assignedStaff, setAssignedStaff] = useState<GlobalStaff[]>([])\r\n  const [assignedServices, setAssignedServices] = useState<(GlobalService & { price:number; duration:number })[]>([])\r\n\r\n  // search\r\n  const [qLeft, setQLeft] = useState('')\r\n  const [qRight, setQRight] = useState('')\r\n\r\n  // dialogs\r\n  const [dlgStaffOpen, setDlgStaffOpen] = useState(false)\r\n  const [dlgServiceOpen, setDlgServiceOpen] = useState(false)\r\n  const [dlgSalonOpen, setDlgSalonOpen] = useState(false)\r\n  const [ovrOpen, setOvrOpen] = useState(false)\r\n  const [ovrSvc, setOvrSvc] = useState<GlobalService | null>(null)\r\n  const [ovrPrice, setOvrPrice] = useState<number | ''>('')\r\n  const [ovrDur, setOvrDur] = useState<number | ''>('')\r\n\r\n  // forms\r\n  const [formStaff, setFormStaff] = useState({ email: '', password: '', name: '' })\r\n  const [formService, setFormService] = useState({ title: '', description: '', price: '', duration: '' } as any)\r\n  const [formSalon, setFormSalon] = useState({ name: '', logoUrl: '' })\r\n\r\n  const [toast, setToast] = useState<{open:boolean; msg:string; sev:'success'|'error'}>({open:false,msg:'',sev:'success'})\r\n\r\n  const [editingServiceId, setEditingServiceId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n      if (loading) return\r\n      if (!user) return router.replace('/login')\r\n      if (user.role !== 'admin') return router.replace('/')\r\n    }, [user, loading])\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const [salonList, staffList, svcList] = await Promise.all([\r\n        fetchSalons(), fetchGlobalStaff(), fetchGlobalServices()\r\n      ])\r\n      setSalons(salonList)\r\n      if (salonList[0]?._id) setSalonId(salonList[0]._id)\r\n      setGStaff(staffList)\r\n      setGServices(svcList)\r\n    })().catch(() => {})\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!salonId) return\r\n      if (tab === 'staff') {\r\n        setAssignedStaff(await listStaffAssignmentsForSalon(salonId))\r\n      } else if (tab === 'services') {\r\n        setAssignedServices(await listServiceAssignmentsForSalon(salonId))\r\n      }\r\n    })()\r\n  }, [salonId, tab])\r\n\r\n  const leftList = useMemo(() => {\r\n    if (tab === 'staff') {\r\n      return qLeft ? gStaff.filter(s => fuzzy(`${s.name||''} ${s.email}`, qLeft)) : gStaff\r\n    }\r\n    if (tab === 'services') {\r\n      return qLeft ? gServices.filter(s => fuzzy(`${s.title} ${s.description||''}`, qLeft)) : gServices\r\n    }\r\n    return salons\r\n  }, [tab, qLeft, gStaff, gServices, salons])\r\n\r\n  const rightList = useMemo(() => {\r\n    if (tab === 'staff') {\r\n      return qRight ? assignedStaff.filter(s => fuzzy(`${s.name||''} ${s.email}`, qRight)) : assignedStaff\r\n    }\r\n    if (tab === 'services') {\r\n      return qRight ? assignedServices.filter(s => fuzzy(`${s.title} ${s.price}`, qRight)) : assignedServices\r\n    }\r\n    return [] // Salons-Tab hat keine rechte Spalte\r\n  }, [tab, qRight, assignedStaff, assignedServices])\r\n\r\n\r\n  // actions\r\n  const onAssign = async (id: string) => {\r\n    if (!salonId) return\r\n    if (tab === 'staff') {\r\n      await assignStaffToSalon(id, salonId)\r\n      setAssignedStaff(await listStaffAssignmentsForSalon(salonId))\r\n      setToast({open:true,msg:'Mitarbeiter zugeordnet',sev:'success'})\r\n      await reloadGuards()\r\n    } else if (tab === 'services') {\r\n      const svc = gServices.find(s => s._id === id) || null\r\n      setOvrSvc(svc); setOvrPrice(''); setOvrDur(''); setOvrOpen(true)\r\n    }\r\n  }\r\n  const onApplyOverrides = async () => {\r\n    if (!ovrSvc || !salonId) return\r\n    await assignServiceToSalon({\r\n      serviceId: ovrSvc._id, salonId,\r\n      priceOverride: ovrPrice === '' ? null : Number(ovrPrice),\r\n      durationOverride: ovrDur === '' ? null : Number(ovrDur),\r\n    })\r\n    setAssignedServices(await listServiceAssignmentsForSalon(salonId))\r\n    setOvrOpen(false)\r\n    setToast({open:true,msg:'Service zugeordnet',sev:'success'})\r\n    await reloadGuards()\r\n  }\r\n  const onUnassign = async (id: string) => {\r\n    if (!salonId) return\r\n    if (tab === 'staff') {\r\n      await unassignStaffFromSalon(id, salonId)\r\n      setAssignedStaff(await listStaffAssignmentsForSalon(salonId))\r\n      setToast({open:true,msg:'Mitarbeiter entfernt',sev:'success'})\r\n      await reloadGuards()\r\n    } else if (tab === 'services') {\r\n      await unassignServiceFromSalon(id, salonId)\r\n      setAssignedServices(await listServiceAssignmentsForSalon(salonId))\r\n      setToast({open:true,msg:'Service entfernt',sev:'success'})\r\n    }\r\n  }\r\n\r\n  const handleRoleChange = async (userId: string, newRole: string) => {\r\n  try {\r\n    const token = localStorage.getItem('token') || ''\r\n    await updateUserRole(userId, newRole, token);\r\n    setGStaff(await fetchGlobalStaff()); // Wichtig: Liste neu laden, um die Änderung zu sehen\r\n    setToast({ open: true, msg: 'Benutzerrolle erfolgreich aktualisiert', sev: 'success' });\r\n  } catch (e: any) {\r\n    const errorMsg = e?.response?.data?.message || 'Fehler beim Aktualisieren der Rolle.';\r\n    setToast({ open: true, msg: errorMsg, sev: 'error' });\r\n  }\r\n};\r\n\r\n  // create global\r\n  const createStaff = async () => {\r\n    if (!formStaff.email || !formStaff.password) {\r\n      setToast({ open: true, msg: 'E-Mail & Passwort erforderlich', sev: 'error' });\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Versuche, den Mitarbeiter zu erstellen\r\n      await createGlobalStaff(formStaff);\r\n\r\n      // Dieser Teil wird nur bei Erfolg ausgeführt\r\n      setGStaff(await fetchGlobalStaff());\r\n      setDlgStaffOpen(false);\r\n      setFormStaff({ email: '', password: '', name: '' });\r\n      setToast({ open: true, msg: 'Staff angelegt', sev: 'success' });\r\n\r\n    } catch (e: any) {\r\n      // Dieser Teil wird ausgeführt, wenn die API einen Fehler zurückgibt\r\n      const errorMsg = e?.response?.data?.message || 'Ein unbekannter Fehler ist aufgetreten.';\r\n      setToast({ open: true, msg: errorMsg, sev: 'error' });\r\n    }\r\n  };\r\n  const createService = async () => {\r\n    const { title, price, duration } = formService\r\n    if (!title || !price || !duration) { setToast({open:true,msg:'Titel, Preis, Dauer erforderlich',sev:'error'}); return }\r\n    await createGlobalService({ title, description: formService.description || undefined, price: Number(price), duration: Number(duration) })\r\n    setGServices(await fetchGlobalServices())\r\n    setDlgServiceOpen(false); setFormService({ title:'', description:'', price:'', duration:'' })\r\n    setToast({open:true,msg:'Service angelegt',sev:'success'})\r\n  }\r\n\r\n  const updateService = async () => {\r\n  if (!editingServiceId) return;\r\n\r\n  try {\r\n    const { title, price, duration } = formService;\r\n    if (!title || !price || !duration) {\r\n      setToast({ open: true, msg: 'Titel, Preis, Dauer erforderlich', sev: 'error' });\r\n      return;\r\n    }\r\n    await updateGlobalService(editingServiceId, {\r\n      title,\r\n      description: formService.description || undefined,\r\n      price: Number(price),\r\n      duration: Number(duration),\r\n    });\r\n\r\n    setGServices(await fetchGlobalServices()); // Liste aktualisieren\r\n    setDlgServiceOpen(false); // Dialog schließen\r\n    setToast({ open: true, msg: 'Service erfolgreich aktualisiert', sev: 'success' });\r\n  } catch (e: any) {\r\n    setToast({ open: true, msg: 'Fehler beim Speichern', sev: 'error' });\r\n  }\r\n};\r\n\r\n  const createSalon = async () => {\r\n    if (!formSalon.name) { setToast({open:true,msg:'Name erforderlich',sev:'error'}); return }\r\n    const s = await createSalonApi({ name: formSalon.name, logoUrl: formSalon.logoUrl || undefined })\r\n    const list = await fetchSalons()\r\n    setSalons(list)\r\n    setSalonId(s._id) // direkt zum neuen Salon springen\r\n    setDlgSalonOpen(false); setFormSalon({ name:'', logoUrl:'' })\r\n    setToast({open:true,msg:'Salon angelegt',sev:'success'})\r\n    await reloadGuards()\r\n  }\r\n\r\n  // delete global\r\n  const deleteStaff = async (id: string) => {\r\n    await deleteGlobalUser(id)\r\n    setGStaff(await fetchGlobalStaff())\r\n    // entfernt sich ggf. auch aus Zuweisungsliste beim Reload\r\n    if (salonId) setAssignedStaff(await listStaffAssignmentsForSalon(salonId))\r\n    setToast({open:true,msg:'Staff gelöscht',sev:'success'})\r\n  }\r\n  const deleteService = async (id: string) => {\r\n    await deleteGlobalService(id)\r\n    setGServices(await fetchGlobalServices())\r\n    if (salonId) setAssignedServices(await listServiceAssignmentsForSalon(salonId))\r\n    setToast({open:true,msg:'Service gelöscht',sev:'success'})\r\n  }\r\n  const deleteSalon = async (id: string) => {\r\n    try {\r\n      await deleteSalonApi(id)\r\n      const list = await fetchSalons()\r\n      setSalons(list)\r\n      if (salonId === id) setSalonId(list[0]?._id || '')\r\n      await reloadGuards()\r\n      setToast({open:true,msg:'Salon gelöscht',sev:'success'})\r\n    } catch (e:any) {\r\n      const msg = e?.response?.data?.message || 'Löschen fehlgeschlagen'\r\n      setToast({open:true,msg,sev:'error'})\r\n      await reloadGuards() // Status aktualisieren (falls sich was geändert hat)\r\n    }\r\n  }\r\n  // Delete-Button letzter Salon\r\n  const [salonGuards, setSalonGuards] = useState<Record<string, SalonGuard>>({})\r\n  useEffect(() => {\r\n    (async () => {\r\n      const guards = await fetchSalonsWithGuards()\r\n      setSalonGuards(Object.fromEntries(guards.map(g => [g._id, g])))\r\n    })().catch(() => {})\r\n  }, [])\r\n\r\n  // nach Create/Delete unbedingt Guards neu laden:\r\n  const reloadGuards = async () => {\r\n    const guards = await fetchSalonsWithGuards()\r\n    setSalonGuards(Object.fromEntries(guards.map(g => [g._id, g])))\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <AdminBreadcrumbs items={[{label:'Mein Salon', href:'/admin'}, {label:'Katalog & Zuordnungen'}]} />\r\n\r\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\r\n        <Typography variant=\"h4\" fontWeight={800} sx={{ flex:1 }}>Katalog & Zuordnungen</Typography>\r\n        {tab !== 'salons' && (\r\n          <TextField select size=\"small\" label=\"Salon\" value={salonId} onChange={(e)=> setSalonId(e.target.value)} sx={{ minWidth: 220 }}>\r\n            {salons.map(s => <MenuItem key={s._id} value={s._id}>{s.name}</MenuItem>)}\r\n          </TextField>\r\n        )}\r\n      </Stack>\r\n\r\n      <Paper variant=\"outlined\" sx={{ borderRadius: 3, overflow: 'hidden' }}>\r\n        <Tabs value={tab} onChange={(_,v)=>setTab(v)} aria-label=\"tabs\">\r\n          <Tab value=\"staff\" label=\"Staff (global → zuordnen)\" />\r\n          <Tab value=\"services\" label=\"Services (global → zuordnen)\" />\r\n          <Tab value=\"salons\" label=\"Salons (global)\" />\r\n        </Tabs>\r\n        <Divider />\r\n        <Box sx={{ p: 2 }}>\r\n          {tab === 'salons' ? (\r\n            <>\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n                <TextField size=\"small\" placeholder=\"Suchen…\" value={qLeft} onChange={(e)=> setQLeft(e.target.value)} />\r\n                <Box sx={{ flex:1 }} />\r\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={()=> setDlgSalonOpen(true)}>Salon anlegen</Button>\r\n              </Stack>\r\n              <Divider sx={{ mb: 1 }} />\r\n              <List dense>\r\n                {(qLeft ? salons.filter(s=>fuzzy(`${s.name} ${s.logoUrl||''}`, qLeft)) : salons).map(s => (\r\n                  <ListItem\r\n                    key={s._id}\r\n                    secondaryAction={\r\n                      (() => {\r\n                        const guard = salonGuards[s._id]\r\n                        const disabled = guard ? !guard.deletable : false\r\n                        const title = guard\r\n                          ? (disabled ? guard.reasons.join(' • ') : 'Salon löschen')\r\n                          : 'Salon löschen'\r\n                        return (\r\n                          <Tooltip title={title}>\r\n                            <span>\r\n                              <IconButton color=\"error\" onClick={()=> deleteSalon(s._id)} disabled={disabled}>\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </span>\r\n                          </Tooltip>\r\n                        )\r\n                      })()\r\n                    }\r\n                  >\r\n                    <ListItemText primary={s.name} secondary={s.logoUrl} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </>\r\n          ) : (\r\n            <Stack direction={{ xs:'column', md:'row' }} spacing={2}>\r\n              {/* LEFT: global katalog */}\r\n              <Paper variant=\"outlined\" sx={{ p:2, flex:1, borderRadius:2 }}>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n                  <TextField size=\"small\" placeholder=\"Suchen…\" value={qLeft} onChange={(e)=> setQLeft(e.target.value)} />\r\n                  <Box sx={{ flex:1 }} />\r\n                  {tab === 'staff' ? (\r\n                    <Button variant=\"contained\" startIcon={<AddIcon />} onClick={()=> setDlgStaffOpen(true)}>Staff anlegen</Button>\r\n                  ) : (\r\n                    <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => {\r\n                      setEditingServiceId(null); // Wichtig: Bearbeitungsmodus ausschalten\r\n                      setFormService({ title: '', description: '', price: '', duration: '' }); // Formular leeren\r\n                      setDlgServiceOpen(true);\r\n                    }}>\r\n                      Service anlegen\r\n                    </Button>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 1 }} />\r\n                <List dense>\r\n                  {(tab === 'staff'\r\n                    ? (qLeft ? gStaff.filter(s=>fuzzy(`${s.name||''} ${s.email}`, qLeft)) : gStaff)\r\n                    : (qLeft ? gServices.filter(s=>fuzzy(`${s.title} ${s.description||''}`, qLeft)) : gServices)\r\n                  ).map(item => {\r\n                    const id = (item as any)._id\r\n                    const already = tab === 'staff'\r\n                      ? assignedStaff.some(s => s._id === id)\r\n                      : assignedServices.some(s => s._id === id)\r\n                    return (\r\n                      <ListItem key={id}\r\n                        secondaryAction={\r\n                          <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                            \r\n                            {/* JETZT NUR ANZEIGEN, WENN DER STAFF-TAB AKTIV IST */}\r\n                            {tab === 'staff' && (\r\n                              <FormControl size=\"small\" sx={{ minWidth: 100 }}>\r\n                                <Select\r\n                                  value={(item as GlobalStaff).role}\r\n                                  onChange={(e) => handleRoleChange(id, e.target.value)}\r\n                                >\r\n                                  <MenuItem value=\"user\">user</MenuItem>\r\n                                  <MenuItem value=\"staff\">staff</MenuItem>\r\n                                  <MenuItem value=\"admin\">admin</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            )}\r\n\r\n                            {/* NEU: Bearbeiten-Icon nur für Services */}\r\n                            {tab === 'services' && (\r\n                              <Tooltip title=\"Service bearbeiten\">\r\n                                <IconButton onClick={() => {\r\n                                  const serviceToEdit = gServices.find(s => s._id === id);\r\n                                  if (serviceToEdit) {\r\n                                    setEditingServiceId(id);\r\n                                    setFormService(serviceToEdit); // Formular mit vorhandenen Daten füllen\r\n                                    setDlgServiceOpen(true);\r\n                                  }\r\n                                }}>\r\n                                  <TuneIcon /> {/* Oder z.B. <EditIcon /> */}\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            )}\r\n\r\n                            <Tooltip title={already ? 'Schon zugeordnet' : 'Zum Salon zuordnen'}>\r\n                              <span>\r\n                                <IconButton disabled={already} onClick={() => onAssign(id)}><AddIcon /></IconButton>\r\n                              </span>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Global löschen\">\r\n                              <IconButton color=\"error\" onClick={() => tab === 'staff' ? deleteStaff(id) : deleteService(id)}>\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </Stack>\r\n                        }>\r\n                        <ListItemText\r\n                          primary={tab==='staff' ? ((item as GlobalStaff).name || (item as GlobalStaff).email) : (item as GlobalService).title}\r\n                          secondary={\r\n                            tab === 'staff'\r\n                              ? `${(item as GlobalStaff).email} • Rolle: ${(item as GlobalStaff).role}`\r\n                              : `${(item as GlobalService).price}€ • ${(item as GlobalService).duration} Min`\r\n                          }\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  })}\r\n                </List>\r\n              </Paper>\r\n\r\n              {/* RIGHT: zugeordnet im Salon */}\r\n              <Paper variant=\"outlined\" sx={{ p:2, flex:1, borderRadius:2 }}>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n                  <Typography fontWeight={700}>Zugeordnet: {salons.find(s=>s._id===salonId)?.name || ''}</Typography>\r\n                  <Box sx={{ flex:1 }} />\r\n                  <TextField size=\"small\" placeholder=\"Suchen…\" value={qRight} onChange={(e)=> setQRight(e.target.value)} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 1 }} />\r\n                <List dense>\r\n                  {(tab === 'staff'\r\n                    ? (qRight ? assignedStaff.filter(s=>fuzzy(`${s.name||''} ${s.email}`, qRight)) : assignedStaff)\r\n                    : (qRight ? assignedServices.filter(s=>fuzzy(`${s.title} ${s.price}`, qRight)) : assignedServices)\r\n                  ).map(item => {\r\n                    const id = (item as any)._id\r\n                    return (\r\n                      <ListItem key={id}\r\n                        secondaryAction={\r\n                          <Stack direction=\"row\" spacing={0.5}>\r\n                            {tab==='services' && (\r\n                              <Tooltip title=\"Overrides setzen\">\r\n                                <IconButton onClick={() => {\r\n                                  const svc = gServices.find(s => s._id === id) || null\r\n                                  setOvrSvc(svc)\r\n                                  const cur = assignedServices.find(s => s._id === id)\r\n                                  setOvrPrice(cur?.price ?? '')\r\n                                  setOvrDur(cur?.duration ?? '')\r\n                                  setOvrOpen(true)\r\n                                }}>\r\n                                  <TuneIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            )}\r\n                            <Tooltip title=\"Zuordnung entfernen\">\r\n                              <IconButton color=\"error\" onClick={()=> onUnassign(id)}><DeleteIcon /></IconButton>\r\n                            </Tooltip>\r\n                          </Stack>\r\n                        }>\r\n                        <ListItemText\r\n                          primary={tab==='staff' ? ((item as GlobalStaff).name || (item as GlobalStaff).email) : (item as any).title}\r\n                          secondary={tab==='staff'\r\n                            ? (item as GlobalStaff).email\r\n                            : `${(item as any).price}€ • ${(item as any).duration} Min`}\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  })}\r\n                </List>\r\n              </Paper>\r\n            </Stack>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Dialogs */}\r\n      <Dialog open={dlgStaffOpen} onClose={()=> setDlgStaffOpen(false)} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle>Staff anlegen (global)</DialogTitle>\r\n        <DialogContent sx={{ display:'flex', flexDirection:'column', gap:2, pt:2 }}>\r\n          <TextField label=\"Name (optional)\" value={formStaff.name} onChange={e=>setFormStaff({...formStaff, name:e.target.value})} />\r\n          <TextField label=\"E-Mail\" value={formStaff.email} onChange={e=>setFormStaff({...formStaff, email:e.target.value})} />\r\n          <TextField label=\"Passwort\" type=\"password\" value={formStaff.password} onChange={e=>setFormStaff({...formStaff, password:e.target.value})} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">Rolle wird auf <b>staff</b> gesetzt.</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=> setDlgStaffOpen(false)}>Abbrechen</Button>\r\n          <Button variant=\"contained\" onClick={createStaff}>Anlegen</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog \r\n        open={dlgServiceOpen} \r\n        onClose={() => {\r\n          setDlgServiceOpen(false); \r\n          setEditingServiceId(null); // Bearbeitungsmodus beim Schließen zurücksetzen\r\n        }} \r\n        fullWidth \r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle>\r\n          {editingServiceId ? 'Service bearbeiten' : 'Service anlegen (global)'}\r\n        </DialogTitle>\r\n        <DialogContent sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 2 }}>\r\n          {/* Die TextFields bleiben unverändert */}\r\n          <TextField label=\"Titel\" value={formService.title} onChange={e => setFormService({ ...formService, title: e.target.value })} />\r\n          {/* ... andere TextFields ... */}\r\n          <TextField label=\"Beschreibung\" value={formService.description} onChange={e=>setFormService({...formService, description:e.target.value})} />\r\n          <TextField label=\"Preis (€)\" type=\"number\" value={formService.price} onChange={e=>setFormService({...formService, price:e.target.value})} />\r\n          <TextField label=\"Dauer (Minuten)\" type=\"number\" value={formService.duration} onChange={e=>setFormService({...formService, duration:e.target.value})} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => { setDlgServiceOpen(false); setEditingServiceId(null); }}>Abbrechen</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={editingServiceId ? updateService : createService}\r\n          >\r\n            Speichern\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog open={dlgSalonOpen} onClose={()=> setDlgSalonOpen(false)} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle>Salon anlegen</DialogTitle>\r\n        <DialogContent sx={{ display:'flex', flexDirection:'column', gap:2, pt:2 }}>\r\n          <TextField label=\"Name\" value={formSalon.name} onChange={e=>setFormSalon({...formSalon, name:e.target.value})} />\r\n          <TextField label=\"Logo URL (optional)\" value={formSalon.logoUrl} onChange={e=>setFormSalon({...formSalon, logoUrl:e.target.value})} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=> setDlgSalonOpen(false)}>Abbrechen</Button>\r\n          <Button variant=\"contained\" onClick={createSalon}>Anlegen</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog open={ovrOpen} onClose={()=> setOvrOpen(false)} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle>Overrides für Service {ovrSvc?.title}</DialogTitle>\r\n        <DialogContent sx={{ display:'flex', flexDirection:'column', gap:2, pt:2 }}>\r\n          <TextField type=\"number\" label=\"Preis (optional Override)\" value={ovrPrice} onChange={e=>setOvrPrice(e.target.value === '' ? '' : Number(e.target.value))} />\r\n          <TextField type=\"number\" label=\"Dauer in Minuten (optional Override)\" value={ovrDur} onChange={e=>setOvrDur(e.target.value === '' ? '' : Number(e.target.value))} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=> setOvrOpen(false)}>Abbrechen</Button>\r\n          <Button variant=\"contained\" onClick={onApplyOverrides}>Speichern</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar open={toast.open} autoHideDuration={2200} onClose={()=>setToast(p=>({...p, open:false}))}\r\n        anchorOrigin={{ vertical:'bottom', horizontal:'center' }}>\r\n        <Alert severity={toast.sev} variant=\"filled\" onClose={()=>setToast(p=>({...p, open:false}))}>\r\n          {toast.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}