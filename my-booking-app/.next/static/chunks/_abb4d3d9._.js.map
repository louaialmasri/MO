{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/context/AuthContext.tsx"],"sourcesContent":["'use client'\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\nimport { onAuthStateChanged, User } from 'firebase/auth'\r\nimport { auth } from '@/lib/firebase'\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({ user: null, loading: true })\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return () => unsubscribe()\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;;;;;;;;AAFA;;;;AAUA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IAAE,MAAM;IAAM,SAAS;AAAK;AAExE,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,cAAc,CAAA,GAAA,oPAAA,CAAA,qBAAkB,AAAD,EAAE;sDAAM,CAAC;oBAC5C,QAAQ;oBACR,WAAW;gBACb;;YAEA;0CAAO,IAAM;;QACf;iCAAG,EAAE;IAEL,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAQ;kBAC1C;;;;;;AAGP;GAlBa;KAAA;AAoBN,MAAM,UAAU;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAW;IAAtC","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/louai/Desktop/Louai/MO/my-booking-app/app/providers.tsx"],"sourcesContent":["'use client'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport { AuthProvider } from '@/context/AuthContext'\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nexport default function Providers({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <AuthProvider>\r\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n    </AuthProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAFA;;;;AAIA,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;AAEpB,SAAS,UAAU,EAAE,QAAQ,EAAiC;IAC3E,qBACE,6LAAC,0HAAA,CAAA,eAAY;kBACX,cAAA,6LAAC,yLAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAAc;;;;;;;;;;;AAGjD;KANwB","debugId":null}}]
}